// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lti installs accounts matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ul
    className="c-filter-list"
>
    <SubAccount
        account={
            Object {
                "id": 1,
                "name": "account_name",
                "parent_account_id": null,
              }
        }
        accounts={
            Object {
                "1": Object {
                  "id": 1,
                  "name": "account_name",
                  "parent_account_id": null,
                },
              }
        }
        currentAccount={null}
        isActive={null}
        setAccountActive={[Function]}
    />
</ul>,
  "nodes": Array [
    <ul
      className="c-filter-list"
>
      <SubAccount
            account={
                  Object {
                        "id": 1,
                        "name": "account_name",
                        "parent_account_id": null,
                      }
            }
            accounts={
                  Object {
                        "1": Object {
                          "id": 1,
                          "name": "account_name",
                          "parent_account_id": null,
                        },
                      }
            }
            currentAccount={null}
            isActive={null}
            setAccountActive={[Function]}
      />
</ul>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Accounts
        accounts={
                Object {
                        "1": Object {
                          "id": 1,
                          "name": "account_name",
                          "parent_account_id": null,
                        },
                      }
        }
        currentAccount={null}
        setAccountActive={[Function]}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Accounts {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "accounts": Object {
            "1": Object {
              "id": 1,
              "name": "account_name",
              "parent_account_id": null,
            },
          },
          "currentAccount": null,
          "setAccountActive": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ul
          className="c-filter-list"
>
          <SubAccount
                    account={
                              Object {
                                        "id": 1,
                                        "name": "account_name",
                                        "parent_account_id": null,
                                      }
                    }
                    accounts={
                              Object {
                                        "1": Object {
                                          "id": 1,
                                          "name": "account_name",
                                          "parent_account_id": null,
                                        },
                                      }
                    }
                    currentAccount={null}
                    isActive={null}
                    setAccountActive={[Function]}
          />
</ul>,
        "_debugID": 4,
        "_renderedOutput": <ul
          className="c-filter-list"
>
          <SubAccount
                    account={
                              Object {
                                        "id": 1,
                                        "name": "account_name",
                                        "parent_account_id": null,
                                      }
                    }
                    accounts={
                              Object {
                                        "1": Object {
                                          "id": 1,
                                          "name": "account_name",
                                          "parent_account_id": null,
                                        },
                                      }
                    }
                    currentAccount={null}
                    isActive={null}
                    setAccountActive={[Function]}
          />
</ul>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Accounts
    accounts={
        Object {
            "1": Object {
              "id": 1,
              "name": "account_name",
              "parent_account_id": null,
            },
          }
    }
    currentAccount={null}
    setAccountActive={[Function]}
/>,
}
`;
