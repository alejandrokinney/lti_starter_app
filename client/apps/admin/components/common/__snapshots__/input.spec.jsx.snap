// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`input matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <label
    className="imaclass"
    htmlFor="IM AN ID"
>
    <input
        checked={true}
        id="IM AN ID"
        name="the name"
        onChange={[Function]}
        type="radio"
        value="IM A VALUE"
    />
    <span>
        IMA LABEL
    </span>
</label>,
  "nodes": Array [
    <label
      className="imaclass"
      htmlFor="IM AN ID"
>
      <input
            checked={true}
            id="IM AN ID"
            name="the name"
            onChange={[Function]}
            type="radio"
            value="IM A VALUE"
      />
      <span>
            IMA LABEL
      </span>
</label>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Input
        className="imaclass"
        inputProps={
                Object {
                        "checked": true,
                        "id": "IM AN ID",
                        "name": "the name",
                        "onChange": [Function],
                        "type": "radio",
                        "value": "IM A VALUE",
                      }
        }
        labelText="IMA LABEL"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "className": "imaclass",
          "inputProps": Object {
            "checked": true,
            "id": "IM AN ID",
            "name": "the name",
            "onChange": [Function],
            "type": "radio",
            "value": "IM A VALUE",
          },
          "labelText": "IMA LABEL",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <label
          className="imaclass"
          htmlFor="IM AN ID"
>
          <input
                    checked={true}
                    id="IM AN ID"
                    name="the name"
                    onChange={[Function]}
                    type="radio"
                    value="IM A VALUE"
          />
          <span>
                    IMA LABEL
          </span>
</label>,
        "_debugID": 2,
        "_renderedOutput": <label
          className="imaclass"
          htmlFor="IM AN ID"
>
          <input
                    checked={true}
                    id="IM AN ID"
                    name="the name"
                    onChange={[Function]}
                    type="radio"
                    value="IM A VALUE"
          />
          <span>
                    IMA LABEL
          </span>
</label>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Input
    className="imaclass"
    inputProps={
        Object {
            "checked": true,
            "id": "IM AN ID",
            "name": "the name",
            "onChange": [Function],
            "type": "radio",
            "value": "IM A VALUE",
          }
    }
    labelText="IMA LABEL"
/>,
}
`;
