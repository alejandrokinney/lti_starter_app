// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sites list row matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <tr>
    <td>
        http://www.example.com
        <span
            className="c-alert c-alert--danger"
            style={
                Object {
                    "fontSize": "10px",
                  }
            }
        >
            OAuth key and/or secret not configured
        </span>
    </td>
    <td>
        <button
            onClick={[Function]}
            style={
                Object {
                    "backgroundColor": "transparent",
                    "border": "none",
                    "color": "grey",
                    "cursor": "pointer",
                    "fontSize": "1.5em",
                  }
            }
        >
            <i
                className="i-settings"
            />
        </button>
        <Connect(SiteModal)
            closeModal={[Function]}
            isOpen={false}
            site={
                Object {
                    "url": "http://www.example.com",
                  }
            }
        />
    </td>
    <td>
        <button
            onClick={[Function]}
            style={
                Object {
                    "backgroundColor": "transparent",
                    "border": "none",
                    "color": "grey",
                    "cursor": "pointer",
                    "fontSize": "1.5em",
                  }
            }
        >
            <i
                className="i-delete"
            />
        </button>
        <Connect(SiteModal)
            closeModal={[Function]}
            isOpen={false}
            site={
                Object {
                    "url": "http://www.example.com",
                  }
            }
        />
    </td>
</tr>,
  "nodes": Array [
    <tr>
      <td>
            http://www.example.com
            <span
                  className="c-alert c-alert--danger"
                  style={
                        Object {
                              "fontSize": "10px",
                            }
                  }
            >
                  OAuth key and/or secret not configured
            </span>
      </td>
      <td>
            <button
                  onClick={[Function]}
                  style={
                        Object {
                              "backgroundColor": "transparent",
                              "border": "none",
                              "color": "grey",
                              "cursor": "pointer",
                              "fontSize": "1.5em",
                            }
                  }
            >
                  <i
                        className="i-settings"
                  />
            </button>
            <Connect(SiteModal)
                  closeModal={[Function]}
                  isOpen={false}
                  site={
                        Object {
                              "url": "http://www.example.com",
                            }
                  }
            />
      </td>
      <td>
            <button
                  onClick={[Function]}
                  style={
                        Object {
                              "backgroundColor": "transparent",
                              "border": "none",
                              "color": "grey",
                              "cursor": "pointer",
                              "fontSize": "1.5em",
                            }
                  }
            >
                  <i
                        className="i-delete"
                  />
            </button>
            <Connect(SiteModal)
                  closeModal={[Function]}
                  isOpen={false}
                  site={
                        Object {
                              "url": "http://www.example.com",
                            }
                  }
            />
      </td>
</tr>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <SiteRow
        site={
                Object {
                        "url": "http://www.example.com",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SiteRow {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "site": Object {
            "url": "http://www.example.com",
          },
        },
        "refs": Object {},
        "state": Object {
          "confirmDeleteModalOpen": false,
          "siteModalOpen": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <tr>
          <td>
                    http://www.example.com
                    <span
                              className="c-alert c-alert--danger"
                              style={
                                        Object {
                                                  "fontSize": "10px",
                                                }
                              }
                    >
                              OAuth key and/or secret not configured
                    </span>
          </td>
          <td>
                    <button
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundColor": "transparent",
                                                  "border": "none",
                                                  "color": "grey",
                                                  "cursor": "pointer",
                                                  "fontSize": "1.5em",
                                                }
                              }
                    >
                              <i
                                        className="i-settings"
                              />
                    </button>
                    <Connect(SiteModal)
                              closeModal={[Function]}
                              isOpen={false}
                              site={
                                        Object {
                                                  "url": "http://www.example.com",
                                                }
                              }
                    />
          </td>
          <td>
                    <button
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundColor": "transparent",
                                                  "border": "none",
                                                  "color": "grey",
                                                  "cursor": "pointer",
                                                  "fontSize": "1.5em",
                                                }
                              }
                    >
                              <i
                                        className="i-delete"
                              />
                    </button>
                    <Connect(SiteModal)
                              closeModal={[Function]}
                              isOpen={false}
                              site={
                                        Object {
                                                  "url": "http://www.example.com",
                                                }
                              }
                    />
          </td>
</tr>,
        "_debugID": 2,
        "_renderedOutput": <tr>
          <td>
                    http://www.example.com
                    <span
                              className="c-alert c-alert--danger"
                              style={
                                        Object {
                                                  "fontSize": "10px",
                                                }
                              }
                    >
                              OAuth key and/or secret not configured
                    </span>
          </td>
          <td>
                    <button
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundColor": "transparent",
                                                  "border": "none",
                                                  "color": "grey",
                                                  "cursor": "pointer",
                                                  "fontSize": "1.5em",
                                                }
                              }
                    >
                              <i
                                        className="i-settings"
                              />
                    </button>
                    <Connect(SiteModal)
                              closeModal={[Function]}
                              isOpen={false}
                              site={
                                        Object {
                                                  "url": "http://www.example.com",
                                                }
                              }
                    />
          </td>
          <td>
                    <button
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundColor": "transparent",
                                                  "border": "none",
                                                  "color": "grey",
                                                  "cursor": "pointer",
                                                  "fontSize": "1.5em",
                                                }
                              }
                    >
                              <i
                                        className="i-delete"
                              />
                    </button>
                    <Connect(SiteModal)
                              closeModal={[Function]}
                              isOpen={false}
                              site={
                                        Object {
                                                  "url": "http://www.example.com",
                                                }
                              }
                    />
          </td>
</tr>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SiteRow
    site={
        Object {
            "url": "http://www.example.com",
          }
    }
/>,
}
`;
