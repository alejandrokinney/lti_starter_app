// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sites index matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <Connect(Heading) />
    <div
        className="o-contain o-contain--full"
    >
        <Connect(SiteModal)
            closeModal={[Function]}
            isOpen={false}
        />
        <Header
            newSite={[Function]}
            openSettings={[Function]}
        />
        <List
            sites={
                Object {
                    "1": Object {
                      "id": 1,
                      "url": "bfcoder.com",
                    },
                    "2": Object {
                      "id": 2,
                      "url": "atomicjolt.com",
                    },
                  }
            }
        />
    </div>
</div>,
  "nodes": Array [
    <div>
      <Connect(Heading) />
      <div
            className="o-contain o-contain--full"
      >
            <Connect(SiteModal)
                  closeModal={[Function]}
                  isOpen={false}
            />
            <Header
                  newSite={[Function]}
                  openSettings={[Function]}
            />
            <List
                  sites={
                        Object {
                              "1": Object {
                                "id": 1,
                                "url": "bfcoder.com",
                              },
                              "2": Object {
                                "id": 2,
                                "url": "atomicjolt.com",
                              },
                            }
                  }
            />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Index
        sites={
                Object {
                        "1": Object {
                          "id": 1,
                          "url": "bfcoder.com",
                        },
                        "2": Object {
                          "id": 2,
                          "url": "atomicjolt.com",
                        },
                      }
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Index {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "sites": Object {
            "1": Object {
              "id": 1,
              "url": "bfcoder.com",
            },
            "2": Object {
              "id": 2,
              "url": "atomicjolt.com",
            },
          },
        },
        "refs": Object {},
        "state": Object {
          "siteModalOpen": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <Connect(Heading) />
          <div
                    className="o-contain o-contain--full"
          >
                    <Connect(SiteModal)
                              closeModal={[Function]}
                              isOpen={false}
                    />
                    <Header
                              newSite={[Function]}
                              openSettings={[Function]}
                    />
                    <List
                              sites={
                                        Object {
                                                  "1": Object {
                                                    "id": 1,
                                                    "url": "bfcoder.com",
                                                  },
                                                  "2": Object {
                                                    "id": 2,
                                                    "url": "atomicjolt.com",
                                                  },
                                                }
                              }
                    />
          </div>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div>
          <Connect(Heading) />
          <div
                    className="o-contain o-contain--full"
          >
                    <Connect(SiteModal)
                              closeModal={[Function]}
                              isOpen={false}
                    />
                    <Header
                              newSite={[Function]}
                              openSettings={[Function]}
                    />
                    <List
                              sites={
                                        Object {
                                                  "1": Object {
                                                    "id": 1,
                                                    "url": "bfcoder.com",
                                                  },
                                                  "2": Object {
                                                    "id": 2,
                                                    "url": "atomicjolt.com",
                                                  },
                                                }
                              }
                    />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Index
    sites={
        Object {
            "1": Object {
              "id": 1,
              "url": "bfcoder.com",
            },
            "2": Object {
              "id": 2,
              "url": "atomicjolt.com",
            },
          }
    }
/>,
}
`;
