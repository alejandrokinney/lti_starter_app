// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application instance modal match the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Modal
    ariaHideApp={true}
    className="c-modal c-modal--settings is-open"
    closeTimeoutMS={0}
    contentLabel="Application Instances Modal"
    isOpen={true}
    onRequestClose={[Function]}
    overlayClassName="c-modal__background"
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnOverlayClick={true}
>
    <h2
        className="c-modal__title"
    >
        Update
         
        the application
         Instance
    </h2>
    <Form
        closeModal={[Function]}
        config="config string"
        configParseError={undefined}
        id={2}
        isUpdate={true}
        newSite={[Function]}
        onChange={[Function]}
        save={[Function]}
        site={
            Object {
                "id": 3,
              }
        }
        site_id="3"
        sites={Object {}}
    />
    <Connect(SiteModal)
        closeModal={[Function]}
        isOpen={false}
    />
</Modal>,
  "nodes": Array [
    <Modal
      ariaHideApp={true}
      className="c-modal c-modal--settings is-open"
      closeTimeoutMS={0}
      contentLabel="Application Instances Modal"
      isOpen={true}
      onRequestClose={[Function]}
      overlayClassName="c-modal__background"
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnOverlayClick={true}
>
      <h2
            className="c-modal__title"
      >
            Update
             
            the application
             Instance
      </h2>
      <Form
            closeModal={[Function]}
            config="config string"
            configParseError={undefined}
            id={2}
            isUpdate={true}
            newSite={[Function]}
            onChange={[Function]}
            save={[Function]}
            site={
                  Object {
                        "id": 3,
                      }
            }
            site_id="3"
            sites={Object {}}
      />
      <Connect(SiteModal)
            closeModal={[Function]}
            isOpen={false}
      />
</Modal>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Modal
        application={
                Object {
                        "id": 1,
                        "name": "the application",
                      }
        }
        applicationInstance={
                Object {
                        "config": "config string",
                        "id": 2,
                        "site": Object {
                          "id": 3,
                        },
                      }
        }
        closeModal={[Function]}
        isOpen={true}
        save={[Function]}
        sites={Object {}}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Modal {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "application": Object {
            "id": 1,
            "name": "the application",
          },
          "applicationInstance": Object {
            "config": "config string",
            "id": 2,
            "site": Object {
              "id": 3,
            },
          },
          "closeModal": [Function],
          "isOpen": true,
          "save": [Function],
          "sites": Object {},
        },
        "refs": Object {},
        "state": Object {
          "newApplicationInstance": Object {
            "config": "config string",
            "id": 2,
            "site": Object {
              "id": 3,
            },
          },
          "siteModalOpen": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Modal
          ariaHideApp={true}
          className="c-modal c-modal--settings is-open"
          closeTimeoutMS={0}
          contentLabel="Application Instances Modal"
          isOpen={true}
          onRequestClose={[Function]}
          overlayClassName="c-modal__background"
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnOverlayClick={true}
>
          <h2
                    className="c-modal__title"
          >
                    Update
                     
                    the application
                     Instance
          </h2>
          <Form
                    closeModal={[Function]}
                    config="config string"
                    configParseError={undefined}
                    id={2}
                    isUpdate={true}
                    newSite={[Function]}
                    onChange={[Function]}
                    save={[Function]}
                    site={
                              Object {
                                        "id": 3,
                                      }
                    }
                    site_id="3"
                    sites={Object {}}
          />
          <Connect(SiteModal)
                    closeModal={[Function]}
                    isOpen={false}
          />
</Modal>,
        "_debugID": 2,
        "_renderedOutput": <Modal
          ariaHideApp={true}
          className="c-modal c-modal--settings is-open"
          closeTimeoutMS={0}
          contentLabel="Application Instances Modal"
          isOpen={true}
          onRequestClose={[Function]}
          overlayClassName="c-modal__background"
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnOverlayClick={true}
>
          <h2
                    className="c-modal__title"
          >
                    Update
                     
                    the application
                     Instance
          </h2>
          <Form
                    closeModal={[Function]}
                    config="config string"
                    configParseError={undefined}
                    id={2}
                    isUpdate={true}
                    newSite={[Function]}
                    onChange={[Function]}
                    save={[Function]}
                    site={
                              Object {
                                        "id": 3,
                                      }
                    }
                    site_id="3"
                    sites={Object {}}
          />
          <Connect(SiteModal)
                    closeModal={[Function]}
                    isOpen={false}
          />
</Modal>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Modal
    application={
        Object {
            "id": 1,
            "name": "the application",
          }
    }
    applicationInstance={
        Object {
            "config": "config string",
            "id": 2,
            "site": Object {
              "id": 3,
            },
          }
    }
    closeModal={[Function]}
    isOpen={true}
    save={[Function]}
    sites={Object {}}
/>,
}
`;
