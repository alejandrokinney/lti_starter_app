// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application instance modal renders a list with settings 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ul
    style={
        Object {
            "backgroundColor": "white",
            "border": "1px solid black",
            "borderRadius": "5px",
            "display": "inline-block",
            "fontSize": "2em",
            "padding": "5px",
            "position": "absolute",
          }
    }
>
    <li>
        Settings
    </li>
    <li>
        Other Settings
    </li>
    <li>
        More Settings
    </li>
</ul>,
  "nodes": Array [
    <ul
      style={
            Object {
                  "backgroundColor": "white",
                  "border": "1px solid black",
                  "borderRadius": "5px",
                  "display": "inline-block",
                  "fontSize": "2em",
                  "padding": "5px",
                  "position": "absolute",
                }
      }
>
      <li>
            Settings
      </li>
      <li>
            Other Settings
      </li>
      <li>
            More Settings
      </li>
</ul>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <settingDropDown />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ul
          style={
                    Object {
                              "backgroundColor": "white",
                              "border": "1px solid black",
                              "borderRadius": "5px",
                              "display": "inline-block",
                              "fontSize": "2em",
                              "padding": "5px",
                              "position": "absolute",
                            }
          }
>
          <li>
                    Settings
          </li>
          <li>
                    Other Settings
          </li>
          <li>
                    More Settings
          </li>
</ul>,
        "_debugID": 2,
        "_renderedOutput": <ul
          style={
                    Object {
                              "backgroundColor": "white",
                              "border": "1px solid black",
                              "borderRadius": "5px",
                              "display": "inline-block",
                              "fontSize": "2em",
                              "padding": "5px",
                              "position": "absolute",
                            }
          }
>
          <li>
                    Settings
          </li>
          <li>
                    Other Settings
          </li>
          <li>
                    More Settings
          </li>
</ul>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <settingDropDown />,
}
`;
