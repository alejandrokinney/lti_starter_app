// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application instances header matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="c-info"
>
    <div
        className="c-title"
    >
        <h1>
            test application
             Instances
        </h1>
    </div>
    <button
        className="c-btn c-btn--yellow"
        onClick={[Function]}
    >
        New Application Instance
    </button>
</div>,
  "nodes": Array [
    <div
      className="c-info"
>
      <div
            className="c-title"
      >
            <h1>
                  test application
                   Instances
            </h1>
      </div>
      <button
            className="c-btn c-btn--yellow"
            onClick={[Function]}
      >
            New Application Instance
      </button>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Header
        application={
                Object {
                        "name": "test application",
                      }
        }
        newApplicationInstance={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "application": Object {
            "name": "test application",
          },
          "newApplicationInstance": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="c-info"
>
          <div
                    className="c-title"
          >
                    <h1>
                              test application
                               Instances
                    </h1>
          </div>
          <button
                    className="c-btn c-btn--yellow"
                    onClick={[Function]}
          >
                    New Application Instance
          </button>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="c-info"
>
          <div
                    className="c-title"
          >
                    <h1>
                              test application
                               Instances
                    </h1>
          </div>
          <button
                    className="c-btn c-btn--yellow"
                    onClick={[Function]}
          >
                    New Application Instance
          </button>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Header
    application={
        Object {
            "name": "test application",
          }
    }
    newApplicationInstance={[Function]}
/>,
}
`;
