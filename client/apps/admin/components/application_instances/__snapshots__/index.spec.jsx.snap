// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application instances index matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <Connect(Heading)
        backTo="/applications"
    />
    <div
        className="o-contain o-contain--full"
    >
        <Modal
            application={undefined}
            closeModal={[Function]}
            isOpen={false}
            save={[Function]}
            sites={
                Object {
                    "1": Object {
                      "id": 1,
                      "oauth_key": "akey",
                      "oauth_secret": "secret",
                    },
                  }
            }
        />
        <Header
            application={undefined}
            newApplicationInstance={[Function]}
            openSettings={[Function]}
        />
        <List
            application={undefined}
            applicationInstances={
                Array [
                    Object {},
                  ]
            }
            canvasOauthURL="https://www.example.com"
            deleteApplicationInstance={[Function]}
            disableApplicationInstance={[Function]}
            saveApplicationInstance={[Function]}
            settings={
                Object {
                    "canvas_callback_url": "https://www.example.com",
                  }
            }
            sites={
                Object {
                    "1": Object {
                      "id": 1,
                      "oauth_key": "akey",
                      "oauth_secret": "secret",
                    },
                  }
            }
        />
    </div>
</div>,
  "nodes": Array [
    <div>
      <Connect(Heading)
            backTo="/applications"
      />
      <div
            className="o-contain o-contain--full"
      >
            <Modal
                  application={undefined}
                  closeModal={[Function]}
                  isOpen={false}
                  save={[Function]}
                  sites={
                        Object {
                              "1": Object {
                                "id": 1,
                                "oauth_key": "akey",
                                "oauth_secret": "secret",
                              },
                            }
                  }
            />
            <Header
                  application={undefined}
                  newApplicationInstance={[Function]}
                  openSettings={[Function]}
            />
            <List
                  application={undefined}
                  applicationInstances={
                        Array [
                              Object {},
                            ]
                  }
                  canvasOauthURL="https://www.example.com"
                  deleteApplicationInstance={[Function]}
                  disableApplicationInstance={[Function]}
                  saveApplicationInstance={[Function]}
                  settings={
                        Object {
                              "canvas_callback_url": "https://www.example.com",
                            }
                  }
                  sites={
                        Object {
                              "1": Object {
                                "id": 1,
                                "oauth_key": "akey",
                                "oauth_secret": "secret",
                              },
                            }
                  }
            />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Index
        applicationInstances={
                Array [
                        Object {},
                      ]
        }
        applications={Object {}}
        canvasOauthURL="https://www.example.com"
        createApplicationInstance={[Function]}
        deleteApplicationInstance={[Function]}
        disableApplicationInstance={[Function]}
        getApplicationInstances={[Function]}
        params={
                Object {
                        "applicationId": "id",
                      }
        }
        saveApplicationInstance={[Function]}
        settings={
                Object {
                        "canvas_callback_url": "https://www.example.com",
                      }
        }
        sites={
                Object {
                        "1": Object {
                          "id": 1,
                          "oauth_key": "akey",
                          "oauth_secret": "secret",
                        },
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Index {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "applicationInstances": Array [
            Object {},
          ],
          "applications": Object {},
          "canvasOauthURL": "https://www.example.com",
          "createApplicationInstance": [Function],
          "deleteApplicationInstance": [Function],
          "disableApplicationInstance": [Function],
          "getApplicationInstances": [Function],
          "params": Object {
            "applicationId": "id",
          },
          "saveApplicationInstance": [Function],
          "settings": Object {
            "canvas_callback_url": "https://www.example.com",
          },
          "sites": Object {
            "1": Object {
              "id": 1,
              "oauth_key": "akey",
              "oauth_secret": "secret",
            },
          },
        },
        "refs": Object {},
        "state": Object {
          "modalOpen": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <Connect(Heading)
                    backTo="/applications"
          />
          <div
                    className="o-contain o-contain--full"
          >
                    <Modal
                              application={undefined}
                              closeModal={[Function]}
                              isOpen={false}
                              save={[Function]}
                              sites={
                                        Object {
                                                  "1": Object {
                                                    "id": 1,
                                                    "oauth_key": "akey",
                                                    "oauth_secret": "secret",
                                                  },
                                                }
                              }
                    />
                    <Header
                              application={undefined}
                              newApplicationInstance={[Function]}
                              openSettings={[Function]}
                    />
                    <List
                              application={undefined}
                              applicationInstances={
                                        Array [
                                                  Object {},
                                                ]
                              }
                              canvasOauthURL="https://www.example.com"
                              deleteApplicationInstance={[Function]}
                              disableApplicationInstance={[Function]}
                              saveApplicationInstance={[Function]}
                              settings={
                                        Object {
                                                  "canvas_callback_url": "https://www.example.com",
                                                }
                              }
                              sites={
                                        Object {
                                                  "1": Object {
                                                    "id": 1,
                                                    "oauth_key": "akey",
                                                    "oauth_secret": "secret",
                                                  },
                                                }
                              }
                    />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <Connect(Heading)
                    backTo="/applications"
          />
          <div
                    className="o-contain o-contain--full"
          >
                    <Modal
                              application={undefined}
                              closeModal={[Function]}
                              isOpen={false}
                              save={[Function]}
                              sites={
                                        Object {
                                                  "1": Object {
                                                    "id": 1,
                                                    "oauth_key": "akey",
                                                    "oauth_secret": "secret",
                                                  },
                                                }
                              }
                    />
                    <Header
                              application={undefined}
                              newApplicationInstance={[Function]}
                              openSettings={[Function]}
                    />
                    <List
                              application={undefined}
                              applicationInstances={
                                        Array [
                                                  Object {},
                                                ]
                              }
                              canvasOauthURL="https://www.example.com"
                              deleteApplicationInstance={[Function]}
                              disableApplicationInstance={[Function]}
                              saveApplicationInstance={[Function]}
                              settings={
                                        Object {
                                                  "canvas_callback_url": "https://www.example.com",
                                                }
                              }
                              sites={
                                        Object {
                                                  "1": Object {
                                                    "id": 1,
                                                    "oauth_key": "akey",
                                                    "oauth_secret": "secret",
                                                  },
                                                }
                              }
                    />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Index
    applicationInstances={
        Array [
            Object {},
          ]
    }
    applications={Object {}}
    canvasOauthURL="https://www.example.com"
    createApplicationInstance={[Function]}
    deleteApplicationInstance={[Function]}
    disableApplicationInstance={[Function]}
    getApplicationInstances={[Function]}
    params={
        Object {
            "applicationId": "id",
          }
    }
    saveApplicationInstance={[Function]}
    settings={
        Object {
            "canvas_callback_url": "https://www.example.com",
          }
    }
    sites={
        Object {
            "1": Object {
              "id": 1,
              "oauth_key": "akey",
              "oauth_secret": "secret",
            },
          }
    }
/>,
}
`;
