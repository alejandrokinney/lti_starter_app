// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`config xml modal matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Modal
    ariaHideApp={true}
    className="c-modal c-modal--settings is-open"
    closeTimeoutMS={0}
    contentLabel="Application Instances Modal"
    isOpen={true}
    onRequestClose={[Function]}
    overlayClassName="c-modal__background"
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnOverlayClick={true}
>
    <h2
        className="c-modal__title"
    >
        Config XML for 
        bfcoder
         Instance
    </h2>
    <div
        className="o-grid__item u-half"
    >
        <Input
            className="c-input"
            inputProps={
                Object {
                    "id": "lti_config_xml_lti_key",
                    "name": "lti_key",
                    "readonly": true,
                    "type": "text",
                    "value": "something-special",
                  }
            }
            labelText="LTI Key"
        />
    </div>
    <div
        className="o-grid__item u-half"
    >
        <Input
            className="c-input"
            inputProps={
                Object {
                    "id": "lti_config_xml_lti_secret",
                    "name": "lti_secret",
                    "readonly": true,
                    "type": "text",
                    "value": "12345",
                  }
            }
            labelText="LTI Secret"
        />
    </div>
    <div
        className="o-grid__item u-full"
    >
        <Textarea
            className="c-input"
            labelText="LTI Config XML"
            textareaProps={
                Object {
                    "id": "application_instance_lti_config_xml",
                    "name": "lti_config_xml",
                    "readonly": true,
                    "rows": 20,
                    "value": "IMA XML",
                  }
            }
        />
    </div>
    <button
        className="c-btn c-btn--gray--large u-m-right"
        onClick={[Function]}
        type="button"
    >
        Close
    </button>
</Modal>,
  "nodes": Array [
    <Modal
      ariaHideApp={true}
      className="c-modal c-modal--settings is-open"
      closeTimeoutMS={0}
      contentLabel="Application Instances Modal"
      isOpen={true}
      onRequestClose={[Function]}
      overlayClassName="c-modal__background"
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnOverlayClick={true}
>
      <h2
            className="c-modal__title"
      >
            Config XML for 
            bfcoder
             Instance
      </h2>
      <div
            className="o-grid__item u-half"
      >
            <Input
                  className="c-input"
                  inputProps={
                        Object {
                              "id": "lti_config_xml_lti_key",
                              "name": "lti_key",
                              "readonly": true,
                              "type": "text",
                              "value": "something-special",
                            }
                  }
                  labelText="LTI Key"
            />
      </div>
      <div
            className="o-grid__item u-half"
      >
            <Input
                  className="c-input"
                  inputProps={
                        Object {
                              "id": "lti_config_xml_lti_secret",
                              "name": "lti_secret",
                              "readonly": true,
                              "type": "text",
                              "value": "12345",
                            }
                  }
                  labelText="LTI Secret"
            />
      </div>
      <div
            className="o-grid__item u-full"
      >
            <Textarea
                  className="c-input"
                  labelText="LTI Config XML"
                  textareaProps={
                        Object {
                              "id": "application_instance_lti_config_xml",
                              "name": "lti_config_xml",
                              "readonly": true,
                              "rows": 20,
                              "value": "IMA XML",
                            }
                  }
            />
      </div>
      <button
            className="c-btn c-btn--gray--large u-m-right"
            onClick={[Function]}
            type="button"
      >
            Close
      </button>
</Modal>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ConfigXmlModal
        application={
                Object {
                        "id": 1,
                        "name": "bfcoder",
                      }
        }
        applicationInstance={
                Object {
                        "id": 1,
                        "lti_config_xml": "IMA XML",
                        "lti_key": "something-special",
                        "lti_secret": "12345",
                      }
        }
        closeModal={[Function]}
        isOpen={true}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "application": Object {
            "id": 1,
            "name": "bfcoder",
          },
          "applicationInstance": Object {
            "id": 1,
            "lti_config_xml": "IMA XML",
            "lti_key": "something-special",
            "lti_secret": "12345",
          },
          "closeModal": [Function],
          "isOpen": true,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Modal
          ariaHideApp={true}
          className="c-modal c-modal--settings is-open"
          closeTimeoutMS={0}
          contentLabel="Application Instances Modal"
          isOpen={true}
          onRequestClose={[Function]}
          overlayClassName="c-modal__background"
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnOverlayClick={true}
>
          <h2
                    className="c-modal__title"
          >
                    Config XML for 
                    bfcoder
                     Instance
          </h2>
          <div
                    className="o-grid__item u-half"
          >
                    <Input
                              className="c-input"
                              inputProps={
                                        Object {
                                                  "id": "lti_config_xml_lti_key",
                                                  "name": "lti_key",
                                                  "readonly": true,
                                                  "type": "text",
                                                  "value": "something-special",
                                                }
                              }
                              labelText="LTI Key"
                    />
          </div>
          <div
                    className="o-grid__item u-half"
          >
                    <Input
                              className="c-input"
                              inputProps={
                                        Object {
                                                  "id": "lti_config_xml_lti_secret",
                                                  "name": "lti_secret",
                                                  "readonly": true,
                                                  "type": "text",
                                                  "value": "12345",
                                                }
                              }
                              labelText="LTI Secret"
                    />
          </div>
          <div
                    className="o-grid__item u-full"
          >
                    <Textarea
                              className="c-input"
                              labelText="LTI Config XML"
                              textareaProps={
                                        Object {
                                                  "id": "application_instance_lti_config_xml",
                                                  "name": "lti_config_xml",
                                                  "readonly": true,
                                                  "rows": 20,
                                                  "value": "IMA XML",
                                                }
                              }
                    />
          </div>
          <button
                    className="c-btn c-btn--gray--large u-m-right"
                    onClick={[Function]}
                    type="button"
          >
                    Close
          </button>
</Modal>,
        "_debugID": 2,
        "_renderedOutput": <Modal
          ariaHideApp={true}
          className="c-modal c-modal--settings is-open"
          closeTimeoutMS={0}
          contentLabel="Application Instances Modal"
          isOpen={true}
          onRequestClose={[Function]}
          overlayClassName="c-modal__background"
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnOverlayClick={true}
>
          <h2
                    className="c-modal__title"
          >
                    Config XML for 
                    bfcoder
                     Instance
          </h2>
          <div
                    className="o-grid__item u-half"
          >
                    <Input
                              className="c-input"
                              inputProps={
                                        Object {
                                                  "id": "lti_config_xml_lti_key",
                                                  "name": "lti_key",
                                                  "readonly": true,
                                                  "type": "text",
                                                  "value": "something-special",
                                                }
                              }
                              labelText="LTI Key"
                    />
          </div>
          <div
                    className="o-grid__item u-half"
          >
                    <Input
                              className="c-input"
                              inputProps={
                                        Object {
                                                  "id": "lti_config_xml_lti_secret",
                                                  "name": "lti_secret",
                                                  "readonly": true,
                                                  "type": "text",
                                                  "value": "12345",
                                                }
                              }
                              labelText="LTI Secret"
                    />
          </div>
          <div
                    className="o-grid__item u-full"
          >
                    <Textarea
                              className="c-input"
                              labelText="LTI Config XML"
                              textareaProps={
                                        Object {
                                                  "id": "application_instance_lti_config_xml",
                                                  "name": "lti_config_xml",
                                                  "readonly": true,
                                                  "rows": 20,
                                                  "value": "IMA XML",
                                                }
                              }
                    />
          </div>
          <button
                    className="c-btn c-btn--gray--large u-m-right"
                    onClick={[Function]}
                    type="button"
          >
                    Close
          </button>
</Modal>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ConfigXmlModal
    application={
        Object {
            "id": 1,
            "name": "bfcoder",
          }
    }
    applicationInstance={
        Object {
            "id": 1,
            "lti_config_xml": "IMA XML",
            "lti_key": "something-special",
            "lti_secret": "12345",
          }
    }
    closeModal={[Function]}
    isOpen={true}
/>,
}
`;
